{"version":3,"sources":["components/header/CurrentDate.js","assets/js/classes/TasksDb.js","store/tasksSlice.js","components/header/DateInput.js","components/header/TasksCount.js","components/header/Header.js","components/taskForm/TaskForm.js","components/tasks/TaskItem.js","components/tasks/TaskWrapper.js","components/footer/Footer.js","App.js","store/store.js","index.js"],"names":["CurrentDate","date","useSelector","state","tasks","dateString","Intl","DateTimeFormat","navigator","language","weekday","day","month","format","Date","className","taskStorage","this","_tasksDb","Dexie","version","stores","task","put","id","changes","update","where","toArray","delete","initialState","isLoaded","isEditing","toDateString","items","tasksActions","payload","type","tasksReducer","map","item","isDone","filter","tasksThunk","dispatch","getState","a","taskDate","getTasks","storeTask","updateTask","deleteTask","DateInput","useState","isOpen","setIsOpen","useDispatch","toggleDatePickerHandler","dateChangeHandler","rawDate","onClick","ReactDOM","createPortal","inline","selected","onChange","onClickOutside","document","querySelector","TasksCount","props","count","Header","tasksCount","length","isDisabled","classString","disabled","TaskForm","inputValue","setInputValue","onSubmit","ev","preventDefault","trim","value","target","TaskItem","isChecked","setIsChecked","isShown","setIsShown","nodeRef","useRef","taskUpdateHandler","taskDeleteHandler","Transition","in","timeout","onExited","deleteStyle","ref","checked","htmlFor","TaskWrapper","tasksWrapper","useEffect","wrapper","current","contentHeight","Array","from","childNodes","reduce","acc","curr","scrollHeight","computedStyle","getComputedStyle","style","height","Number","parseInt","paddingTop","paddingBottom","Footer","href","title","rel","App","enhancer","applyMiddleware","thunkMiddleware","store","createStore","action","render","StrictMode"],"mappings":"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","file":"static/js/main.7c3d58e4.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport './CurrentDate.scss';\r\n\r\nexport default function CurrentDate() {\r\n  const date = useSelector((state) => state.tasks.date);\r\n\r\n  const dateString = new Intl.DateTimeFormat(navigator.language, {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'short',\r\n  }).format(new Date(date));\r\n\r\n  return <h1 className=\"current-date\">{dateString}</h1>;\r\n}\r\n","import Dexie from 'dexie';\r\n\r\nclass TaskStorage {\r\n  constructor() {\r\n    this._tasksDb = new Dexie('TasksDb');\r\n\r\n    this._tasksDb.version(1).stores({\r\n      tasks: '++id, date, value, isDone',\r\n    });\r\n  }\r\n\r\n  storeTask(task) {\r\n    return this._tasksDb.tasks.put(task);\r\n  }\r\n\r\n  updateTask(id, changes) {\r\n    this._tasksDb.tasks.update(id, changes);\r\n  }\r\n\r\n  getTasks(date) {\r\n    return this._tasksDb.tasks.where({ date }).toArray();\r\n  }\r\n\r\n  deleteTask(id) {\r\n    this._tasksDb.tasks.delete(id);\r\n  }\r\n}\r\n\r\nconst taskStorage = new TaskStorage();\r\n\r\nexport default taskStorage;\r\n","import taskStorage from '../assets/js/classes/TasksDb';\r\n\r\nconst initialState = {\r\n  isLoaded: false,\r\n  isEditing: false,\r\n  date: new Date().toDateString(),\r\n  items: [],\r\n};\r\n\r\nconst tasksActions = {\r\n  setIsLoaded(payload) {\r\n    return { type: 'tasks/setIsLoaded', payload };\r\n  },\r\n  setIsEditing(payload) {\r\n    return { type: 'tasks/setIsEditing', payload };\r\n  },\r\n  setItems(payload) {\r\n    return { type: 'tasks/setItems', payload };\r\n  },\r\n  addItem(payload) {\r\n    return { type: 'tasks/addItem', payload };\r\n  },\r\n  updateItem(payload) {\r\n    return { type: 'tasks/updateItem', payload };\r\n  },\r\n  deleteItem(payload) {\r\n    return { type: 'tasks/deleteItem', payload };\r\n  },\r\n};\r\n\r\nfunction tasksReducer(state = initialState, { type, payload }) {\r\n  if (type === 'tasks/setIsLoaded') {\r\n    return { ...state, isLoaded: payload };\r\n  }\r\n\r\n  if (type === 'tasks/setIsEditing') {\r\n    if (payload) return { ...state, isEditing: payload };\r\n\r\n    return { ...state, isEditing: !state.isEditing };\r\n  }\r\n\r\n  if (type === 'tasks/setItems') {\r\n    return {\r\n      ...state,\r\n      isEditing: false,\r\n      isLoaded: true,\r\n      date: payload.date,\r\n      items: payload.tasks,\r\n    };\r\n  }\r\n\r\n  if (type === 'tasks/addItem') {\r\n    return { ...state, items: [...state.items, payload] };\r\n  }\r\n\r\n  if (type === 'tasks/updateItem') {\r\n    return {\r\n      ...state,\r\n      items: state.items.map((item) => {\r\n        if (item.id === payload.id) return { ...item, isDone: payload.isDone };\r\n\r\n        return { ...item };\r\n      }),\r\n    };\r\n  }\r\n\r\n  if (type === 'tasks/deleteItem') {\r\n    return {\r\n      ...state,\r\n      items: state.items.filter((item) => item.id !== payload),\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst tasksThunk = {\r\n  fetchTasks(date) {\r\n    return async function fetchTasksThunk(dispatch, getState) {\r\n      const taskDate = date ? date : getState().tasks.date;\r\n\r\n      dispatch(tasksActions.setIsLoaded(false));\r\n\r\n      const tasks = await taskStorage.getTasks(taskDate);\r\n\r\n      dispatch(tasksActions.setItems({ date: taskDate, tasks }));\r\n\r\n      return tasks;\r\n    };\r\n  },\r\n  addTask(task) {\r\n    return async function AddTaskThunk(dispatch) {\r\n      const id = await taskStorage.storeTask(task);\r\n\r\n      dispatch(tasksActions.addItem({ id, ...task }));\r\n    };\r\n  },\r\n  updateTask(payload) {\r\n    return async function AddTaskThunk(dispatch) {\r\n      await taskStorage.updateTask(payload.id, { isDone: payload.isDone });\r\n\r\n      dispatch(\r\n        tasksActions.updateItem({ id: payload.id, isDone: payload.isDone })\r\n      );\r\n    };\r\n  },\r\n  deleteTask(id) {\r\n    return async function AddTaskThunk(dispatch) {\r\n      await taskStorage.deleteTask(id);\r\n\r\n      dispatch(tasksActions.deleteItem(id));\r\n    };\r\n  },\r\n};\r\n\r\nexport { tasksActions, tasksThunk, tasksReducer };\r\n","import { Fragment, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './DateInput.scss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { tasksThunk } from '../../store/tasksSlice';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function DateInput() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const date = useSelector((state) => state.tasks.date);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleDatePickerHandler = () => {\r\n    setIsOpen((state) => !state);\r\n  };\r\n\r\n  const dateChangeHandler = async (rawDate) => {\r\n    toggleDatePickerHandler();\r\n\r\n    const date = new Date(rawDate).toDateString();\r\n    dispatch(tasksThunk.fetchTasks(date));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        className=\"datepicker-toggle\"\r\n        onClick={toggleDatePickerHandler}\r\n      ></button>\r\n      {isOpen &&\r\n        ReactDOM.createPortal(\r\n          <Fragment>\r\n            <div className=\"datepicker-container\">\r\n              <ReactDatePicker\r\n                inline\r\n                selected={new Date(date)}\r\n                onChange={dateChangeHandler}\r\n                onClickOutside={toggleDatePickerHandler}\r\n              />\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </Fragment>,\r\n          document.querySelector('.datepicker-root')\r\n        )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDateInput.propTypes = {\r\n  onTasksEdit: PropTypes.func,\r\n};\r\n","import './TasksCount.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TasksCount(props) {\r\n  return (\r\n    <p className=\"task-count\">\r\n      {`${props.count} ${props.count === 1 ? `task` : 'tasks'}`}\r\n    </p>\r\n  );\r\n}\r\n\r\nTasksCount.propTypes = {\r\n  count: PropTypes.number,\r\n};\r\n","import './Header.scss';\r\nimport CurrentDate from './CurrentDate';\r\nimport DateInput from './DateInput';\r\nimport TasksCount from './TasksCount';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { tasksActions } from '../../store/tasksSlice';\r\n\r\nexport default function Header() {\r\n  const tasksCount = useSelector((state) => state.tasks.items.length);\r\n  const isDisabled = tasksCount === 0;\r\n\r\n  const classString = `toggle-deletion ${\r\n    isDisabled ? 'toggle-deletion_disabled' : ''\r\n  }`;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleEditingHandler = () => {\r\n    dispatch(tasksActions.setIsEditing());\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <CurrentDate />\r\n      <TasksCount count={tasksCount} />\r\n      <button\r\n        type=\"button\"\r\n        className={classString}\r\n        disabled={isDisabled}\r\n        onClick={toggleEditingHandler}\r\n      ></button>\r\n      <DateInput />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { tasksThunk } from '../../store/tasksSlice';\r\nimport './TaskForm.scss';\r\n\r\nexport default function TaskForm() {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const date = useSelector((state) => state.tasks.date);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const inputChangeHandler = (ev) => {\r\n    setInputValue(ev.target.value);\r\n  };\r\n\r\n  const formSubmissionHandler = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (inputValue.trim() === '') return;\r\n\r\n    dispatch(\r\n      tasksThunk.addTask({\r\n        date,\r\n        value: inputValue.trim(),\r\n        isDone: false,\r\n      })\r\n    );\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"task-form\" onSubmit={formSubmissionHandler}>\r\n      <input\r\n        value={inputValue}\r\n        className=\"task-form__input\"\r\n        onChange={inputChangeHandler}\r\n      />\r\n      <button className=\"task-form__submit\" type=\"submit\">\r\n        +\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { tasksThunk } from '../../store/tasksSlice';\r\nimport PropTypes from 'prop-types';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nexport default function TaskItem(props) {\r\n  const [isChecked, setIsChecked] = useState(props.isDone);\r\n  const [isShown, setIsShown] = useState(true);\r\n\r\n  const nodeRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const taskUpdateHandler = () => {\r\n    setIsChecked((state) => !state);\r\n\r\n    dispatch(tasksThunk.updateTask({ id: props.id, isDone: !isChecked }));\r\n  };\r\n\r\n  const taskDeleteHandler = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  return (\r\n    <Transition\r\n      nodeRef={nodeRef}\r\n      in={isShown}\r\n      timeout={300}\r\n      onExited={() => dispatch(tasksThunk.deleteTask(props.id))}\r\n    >\r\n      {() => {\r\n        const deleteStyle = !isShown ? ' task-wrapper__item_deleting' : '';\r\n\r\n        return (\r\n          <li ref={nodeRef} className={'task-wrapper__item' + deleteStyle}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isChecked}\r\n              id={`task-item-${props.id}`}\r\n              className=\"task-wrapper__check\"\r\n              onChange={taskUpdateHandler}\r\n            ></input>\r\n            <label\r\n              htmlFor={`task-item-${props.id}`}\r\n              className=\"task-wrapper__value\"\r\n            >\r\n              {props.value}\r\n            </label>\r\n            <button\r\n              className=\"task-wrapper__delete\"\r\n              onClick={taskDeleteHandler}\r\n            ></button>\r\n          </li>\r\n        );\r\n      }}\r\n    </Transition>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  id: PropTypes.number,\r\n  value: PropTypes.string,\r\n  isDone: PropTypes.bool,\r\n};\r\n","import TaskItem from './TaskItem';\r\nimport './TaskWrapper.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nexport default function TaskWrapper() {\r\n  const tasks = useSelector((state) => state.tasks.items);\r\n  const isLoaded = useSelector((state) => state.tasks.isLoaded);\r\n  const isEditing = useSelector((state) => state.tasks.isEditing);\r\n\r\n  const classString = `task-wrapper ${isEditing ? 'task-wrapper_editing' : ''}`;\r\n\r\n  const tasksWrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    const wrapper = tasksWrapper.current;\r\n\r\n    if (!wrapper) return;\r\n\r\n    const contentHeight = Array.from(wrapper.childNodes).reduce(\r\n      (acc, curr) => (acc += curr.scrollHeight),\r\n      0\r\n    );\r\n\r\n    const computedStyle = getComputedStyle(wrapper);\r\n\r\n    wrapper.style.height =\r\n      contentHeight +\r\n      Number.parseInt(computedStyle.paddingTop) +\r\n      Number.parseInt(computedStyle.paddingBottom) +\r\n      'px';\r\n  });\r\n\r\n  return (\r\n    <ul ref={tasksWrapper} className={classString}>\r\n      {!isLoaded && <div className=\"loading-gif\"></div>}\r\n      {tasks.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          id={task.id}\r\n          value={task.value}\r\n          isDone={task.isDone}\r\n          isEditing={isEditing}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { Fragment } from 'react';\r\nimport './Footer.scss';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Fragment>\r\n      Icons made by{' '}\r\n      <a\r\n        className=\"footer__link\"\r\n        href=\"https://www.flaticon.com/authors/DinosoftLabs\"\r\n        title=\"DinosoftLabs\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        DinosoftLabs\r\n      </a>{' '}\r\n      from{' '}\r\n      <a\r\n        className=\"footer__link\"\r\n        href=\"https://www.flaticon.com/\"\r\n        title=\"Flaticon\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        flaticon.com\r\n      </a>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, useEffect } from 'react';\r\nimport Header from './components/header/Header';\r\nimport TaskForm from './components/taskForm/TaskForm';\r\nimport TaskWrapper from './components/tasks/TaskWrapper';\r\nimport Footer from './components/footer/Footer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { tasksThunk } from './store/tasksSlice';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.scss';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(tasksThunk.fetchTasks());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <TaskForm />\r\n      <TaskWrapper />\r\n      {ReactDOM.createPortal(<Footer />, document.querySelector('.footer'))}\r\n    </Fragment>\r\n  );\r\n}\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { tasksReducer } from './tasksSlice';\r\n\r\nfunction reducer(state = {}, action) {\r\n  return {\r\n    tasks: tasksReducer(state.tasks, action),\r\n  };\r\n}\r\n\r\nconst enhancer = applyMiddleware(thunkMiddleware);\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.querySelector('.app')\n);\n"],"sourceRoot":""}