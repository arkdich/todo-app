{"version":3,"sources":["components/header/CurrentDate.js","components/header/DateInput.js","components/header/TasksCount.js","components/header/Header.js","components/taskForm/TaskForm.js","components/tasks/TaskItem.js","components/tasks/TaskWrapper.js","App.js","assets/js/classes/TasksDb.js","components/footer/Footer.js","index.js"],"names":["CurrentDate","props","dateString","Intl","DateTimeFormat","navigator","language","weekday","day","month","format","Date","date","className","DateInput","useState","isOpened","setIsOpened","toggleDatePickerHandler","onClick","ReactDOM","createPortal","inline","selected","onChange","onSelectDate","onClickOutside","document","querySelector","TasksCount","tasksCount","Header","dateSelectionHandler","rawDate","a","toDateString","taskStorage","getTasks","selectedTasks","type","onEdit","TaskForm","inputValue","setInputValue","onSubmit","ev","preventDefault","trim","newTask","value","isDone","onFormSubmit","target","TaskItem","isChecked","setIsChecked","checked","id","onTaskUpdate","htmlFor","TaskWrapper","classString","isEditing","matches","taskInput","closest","taskId","Number","slice","onItemDelete","tasks","map","task","onItemUpdate","App","setIsEditing","storage","selectedDate","selectedDateTasks","length","appState","setAppState","addNewTaskHandler","storeTask","old","updateTask","bind","deleteTask","filter","TaskStorage","_tasksDb","Dexie","this","version","stores","put","changes","update","where","toArray","delete","Footer","href","title","rel","then","render","StrictMode"],"mappings":"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","file":"static/js/main.55a564c3.chunk.js","sourcesContent":["import './CurrentDate.scss';\r\n\r\nexport default function CurrentDate(props) {\r\n  const dateString = new Intl.DateTimeFormat(navigator.language, {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'short',\r\n  }).format(new Date(props.date));\r\n\r\n  return <h1 className=\"current-date\">{dateString}</h1>;\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './DateInput.scss';\r\n\r\nexport default function DateInput(props) {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const toggleDatePickerHandler = () => {\r\n    setIsOpened(!isOpened);\r\n  };\r\n\r\n  const dateChangeHandler = (date) => {\r\n    props.onSelectDate(date);\r\n\r\n    toggleDatePickerHandler();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        className=\"datepicker-toggle\"\r\n        onClick={toggleDatePickerHandler}\r\n      ></button>\r\n      {isOpened &&\r\n        ReactDOM.createPortal(\r\n          <Fragment>\r\n            <div className=\"datepicker-container\">\r\n              <ReactDatePicker\r\n                inline\r\n                selected={new Date(props.date)}\r\n                onChange={dateChangeHandler}\r\n                onClickOutside={toggleDatePickerHandler}\r\n              />\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n          </Fragment>,\r\n          document.querySelector('.datepicker-root')\r\n        )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import './TasksCount.scss';\r\n\r\nexport default function TasksCount(props) {\r\n  return (\r\n    <p className=\"task-count\">\r\n      {`${props.tasksCount} ${props.tasksCount === 1 ? `task` : 'tasks'}`}\r\n    </p>\r\n  );\r\n}\r\n","import './Header.scss';\r\nimport CurrentDate from './CurrentDate';\r\nimport DateInput from './DateInput';\r\nimport TasksCount from './TasksCount';\r\n\r\nexport default function Header(props) {\r\n  const dateSelectionHandler = async (rawDate) => {\r\n    const date = new Date(rawDate).toDateString();\r\n    const selectedTasks = await props.taskStorage.getTasks(date);\r\n\r\n    props.onSelectDate(date, selectedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <CurrentDate date={props.date} />\r\n      <TasksCount tasksCount={props.tasksCount} />\r\n      {props.tasksCount !== 0 && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"toggle-deletion\"\r\n          onClick={() => props.onEdit()}\r\n        ></button>\r\n      )}\r\n      <DateInput date={props.date} onSelectDate={dateSelectionHandler} />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport './TaskForm.scss';\r\n\r\nexport default function TaskForm(props) {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const inputChangeHandler = (ev) => {\r\n    setInputValue(ev.target.value);\r\n  };\r\n\r\n  const formSubmissionHandler = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (inputValue.trim() === '') return;\r\n\r\n    const newTask = {\r\n      date: props.date,\r\n      value: inputValue.trim(),\r\n      isDone: false,\r\n    };\r\n\r\n    props.onFormSubmit(newTask);\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"task-form\" onSubmit={formSubmissionHandler}>\r\n      <input\r\n        value={inputValue}\r\n        className=\"task-form__input\"\r\n        onChange={inputChangeHandler}\r\n      />\r\n      <button className=\"task-form__submit\" type=\"submit\">\r\n        +\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default function TaskItem(props) {\r\n  const [isChecked, setIsChecked] = useState(props.isDone);\r\n\r\n  const taskUpdateHandler = () => {\r\n    setIsChecked(!isChecked);\r\n    props.onTaskUpdate(props.id, { isDone: !isChecked });\r\n  };\r\n\r\n  return (\r\n    <li className=\"task-wrapper__item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        id={`task-item-${props.id}`}\r\n        className=\"task-wrapper__check\"\r\n        onChange={taskUpdateHandler}\r\n      ></input>\r\n      <label htmlFor={`task-item-${props.id}`} className=\"task-wrapper__value\">\r\n        {props.value}\r\n      </label>\r\n      <button className=\"task-wrapper__delete\"></button>\r\n    </li>\r\n  );\r\n}\r\n","import TaskItem from './TaskItem';\r\nimport './TaskWrapper.scss';\r\n\r\nexport default function TaskWrapper(props) {\r\n  const classString =\r\n    'task-wrapper' + (props.isEditing ? ' task-wrapper_editing' : '');\r\n\r\n  const taskDeleteHandler = (ev) => {\r\n    if (!ev.target.matches('.task-wrapper__delete')) return;\r\n\r\n    const taskItem = ev.target.closest('.task-wrapper__item');\r\n    const taskInput = taskItem.querySelector('.task-wrapper__check');\r\n\r\n    const taskId = Number(taskInput.id.slice(10));\r\n\r\n    props.onItemDelete(taskId);\r\n  };\r\n\r\n  return (\r\n    <ul className={classString} onClick={taskDeleteHandler}>\r\n      {props.tasks.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          id={task.id}\r\n          value={task.value}\r\n          isDone={task.isDone}\r\n          isEditing={props.isEditing}\r\n          onTaskUpdate={props.onItemUpdate}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState, Fragment } from 'react';\r\nimport Header from './components/header/Header';\r\nimport TaskForm from './components/taskForm/TaskForm';\r\nimport TaskWrapper from './components/tasks/TaskWrapper';\r\n\r\nexport default function App(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const taskStorage = props.storage;\r\n\r\n  const [appState, setAppState] = useState({\r\n    selectedDate: new Date().toDateString(),\r\n    selectedDateTasks: props.tasks,\r\n    tasksCount: props.tasks.length,\r\n  });\r\n\r\n  const addNewTaskHandler = async (task) => {\r\n    const taskId = await taskStorage.storeTask(task);\r\n\r\n    setAppState((old) => ({\r\n      selectedDate: old.selectedDate,\r\n      selectedDateTasks: [...old.selectedDateTasks, { ...task, id: taskId }],\r\n      tasksCount: old.tasksCount + 1,\r\n    }));\r\n  };\r\n\r\n  const deleteTaskHandler = (taskId) => {\r\n    taskStorage.deleteTask(taskId);\r\n\r\n    setAppState((old) => ({\r\n      selectedDate: old.selectedDate,\r\n      selectedDateTasks: appState.selectedDateTasks.filter(\r\n        (task) => task.id !== taskId\r\n      ),\r\n      tasksCount: old.tasksCount - 1,\r\n    }));\r\n\r\n    if (appState.tasksCount - 1 === 0) setIsEditing(false);\r\n  };\r\n\r\n  const dateSelectionHandler = (date, selectedTasks) => {\r\n    setAppState({\r\n      selectedDate: date,\r\n      selectedDateTasks: selectedTasks,\r\n      tasksCount: selectedTasks.length,\r\n    });\r\n  };\r\n\r\n  const taskEditHandler = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        taskStorage={taskStorage}\r\n        tasks={appState.selectedDateTasks}\r\n        tasksCount={appState.tasksCount}\r\n        date={appState.selectedDate}\r\n        onSelectDate={dateSelectionHandler}\r\n        onEdit={taskEditHandler}\r\n      />\r\n      <TaskForm onFormSubmit={addNewTaskHandler} date={appState.selectedDate} />\r\n      <TaskWrapper\r\n        isEditing={isEditing}\r\n        tasks={appState.selectedDateTasks}\r\n        onItemUpdate={taskStorage.updateTask.bind(taskStorage)}\r\n        onItemDelete={deleteTaskHandler}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import Dexie from 'dexie';\r\n\r\nexport default class TaskStorage {\r\n  _tasksDb = new Dexie('TasksDb');\r\n\r\n  constructor() {\r\n    this._tasksDb.version(1).stores({\r\n      tasks: '++id, date, value, isDone',\r\n    });\r\n  }\r\n\r\n  storeTask(task) {\r\n    return this._tasksDb.tasks.put(task);\r\n  }\r\n\r\n  updateTask(id, changes) {\r\n    this._tasksDb.tasks.update(id, changes);\r\n  }\r\n\r\n  getTasks(date) {\r\n    return this._tasksDb.tasks.where({ date }).toArray();\r\n  }\r\n\r\n  deleteTask(id) {\r\n    this._tasksDb.tasks.delete(id);\r\n  }\r\n}\r\n","import { Fragment } from 'react';\r\nimport './Footer.scss';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Fragment>\r\n      Icons made by{' '}\r\n      <a\r\n        className=\"footer__link\"\r\n        href=\"https://www.flaticon.com/authors/DinosoftLabs\"\r\n        title=\"DinosoftLabs\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        DinosoftLabs\r\n      </a>{' '}\r\n      from{' '}\r\n      <a\r\n        className=\"footer__link\"\r\n        href=\"https://www.flaticon.com/\"\r\n        title=\"Flaticon\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        flaticon.com\r\n      </a>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport TaskStorage from './assets/js/classes/TasksDb';\nimport Footer from './components/footer/Footer';\n\nconst taskStorage = new TaskStorage();\n\ntaskStorage.getTasks(new Date().toDateString()).then((tasks) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App storage={taskStorage} tasks={tasks} />\n    </React.StrictMode>,\n    document.querySelector('.app')\n  );\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Footer />\n  </React.StrictMode>,\n  document.querySelector('.footer')\n);\n"],"sourceRoot":""}